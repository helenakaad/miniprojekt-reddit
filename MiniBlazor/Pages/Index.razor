@page "/"

@using Services;
@using Shared.Model;

@inject ApiService apiService

@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<PageTitle>Threads</PageTitle>


<style>
    .arrow {
        background-color: transparent; /* Baggrundsfarve */
        color: lightgrey; /* Tekstfarve */
        border: none; /* Ingen kant */
        font-size: 30px; /* Juster størrelsen efter dine præferencer */
        cursor: pointer; /* Gør det til en markør, når du hovrer over knappen */
        position: relative;
        overflow: hidden;
    }
    .arrow.up:hover {
        color: lightgreen;
    }

    .arrow.down:hover {
        color: lightpink;
    }

    .links {
        text-decoration: none;
        color: darkslategray;
    }

    .links.s {
        text-decoration: none;
        color: darkgrey;
    }

    .links:hover {
        color: lightgrey;
    }

    .header {
        color: black; /* Tekstfarve */
        border: none; /* Ingen kant */
        font-size: 80px; /* Juster størrelsen efter dine præferencer */
        bottom-margin: 0px;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }
</style>

<div class="header">
    <p>REDDIT 2.0</p>
    <a class="links" style="font-size: 30px; margin-top: 0px;" href="/posts/newPost">Have something to ask? ✎</a>
</div>
<br />

<div class="container">
    @foreach (var post in posts)
    {
        <h1><a class="links" href="/posts/@post.PostsId">@post.Header</a></h1>
        <p style="color:slategray; font-size: small">@post.Name</p>
        <p style="color:grey">@post.Text</p>
        <div id="container">
            <button class="arrow up" @onclick="() => { UpvotePost(post.PostsId); }"> ⬆ </button>
            <p style="display:inline-block;"> @(post.Upvotes - post.DownVotes) </p>
            <button class="arrow down" @onclick="() => { DownvotePost(post.PostsId); }"> ⬇ </button>
            <p style="display:inline-block;"><a class="links s" href="/posts/@post.PostsId">Comments</a></p>
        </div>
        <p style="font-size:15px; color:lightgrey;">@post.DateTime</p>
        <hr />
        <br />
    }
</div>



@code {

    public Posts post { get; set; }
    public string? Text;
    public string? Header;
    public string? Name;
    private List<Posts> posts = new();

    public string Id { get; set; }
    public int Upvotes { get; set; }

    public int id { get { return int.Parse(Id); } }

    protected override async Task OnInitializedAsync()
    {
        posts = await apiService.GetPosts();
    }

    private async Task UpvotePost(int id)
    {
        post = await apiService.UpvotePosts(id);
        await OnInitializedAsync();
        StateHasChanged();
    }

    private async Task DownvotePost(int id)
    {
        post = await apiService.DownvotePosts(id);
        await OnInitializedAsync();
        StateHasChanged();
    }
}

